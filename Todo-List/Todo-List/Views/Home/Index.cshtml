@model IEnumerable<Todo_List.Models.TaskModel>

<link rel="stylesheet" href="~/css/index.css">

<div class="main">
    <div class="left-container">
        <div class="upper-container">
            <div class="circle-container">
                <div class="circle">

                </div>
            </div>
           <div class="name-container">
             <h4 class="name">Rogel Gerodiaz</h4>
           </div>
        </div>
        <div class="line-container">
            <div class="line"></div>
        </div>
        <div class="side-content-container">
            <div class="content-container">
                <h3 class="today-tasks">Today tasks</h3>
                <div class="item-container">
                    <div class="item-sec-container">
                        <div class="circle1"></div>
                        <h3 class="items">Personal</h3>
                    </div>
                    <div class="item-sec-container">
                        <div class="circle2"></div>
                        <h3 class="items">Freelance</h3>
                    </div>
                     <div class="item-sec-container">
                        <div class="circle3"></div>
                        <h3 class="items">Work</h3>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="right-container">
        <div class="box-container">
            <div class="right-box">
                <div class="title-container">
                    <h4 class="title">To-do List</h4>
                </div>

                <form asp-action="Create" asp-controller="Tasks" method="post">
                    @Html.AntiForgeryToken()
                    <div class="input-maincontainer">
                        <div class="input-box">
                            <div class="three-circles-container">
                                <div class="circle1"></div>
                                <div class="circle2"></div>
                                <div class="circle3"></div>
                                <input type="text" placeholder="What is your next tasks?" class="input-field" name="Description">
                                <select name="Category" class='select-input'>
                                    <option value="">Choose Category</option>
                                    <option value="Personal">Personal</option>
                                    <option value="Freelance">Freelance</option>
                                    <option value="Work">Work</option>
                                </select>
                                <input type="datetime-local" id="dateTimeInput" class='date' name="DueDate">
                                @* <button type="submit"><box-icon name='edit-save' size='38px' class='edit-save'></box-icon></button> *@
                                <button type="submit"><box-icon name='save' size='38px' class='save-icon'></box-icon></button>
                            </div>
                        </div>
                    </div>
                </form>

                <div class="tasks-container">
                    @foreach (var task in Model)
                    {
                        <div class="input-box-tasks">
                            <div class="tasks-circle @(task.Category == "Personal" ? "tasks-circle1" : task.Category == "Freelance" ? "tasks-circle2" : "tasks-circle3")"></div>
                            <h3 class="tasks-text">@task.Description</h3>
                            <div class="time-container">
                                <h3 class="tasks-time">@task.DueDate.ToString("hh:mm tt")</h3>
                            </div>
                            <h3 class='category-text @(task.Category == "Personal" ? "category-text1" : task.Category == "Freelance" ? "category-text2" : "category-text3")'>@task.Category</h3>
                            <input type="hidden" name="Id" value="" />
                            <box-icon name='edit-alt' size='38px' class='edit-icon' data-id='@task.Id'></box-icon>
                            <box-icon name='trash' size='38px' color='red' class='delete-icon' data-id='@task.Id'></box-icon>
                        </div>
                    }                    
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

<script>
$(document).ready(function() {
    $('.delete-icon').click(function() {
        var taskId = parseInt($(this).data('id')); // Parse the id to an integer

        $.ajax({
            url: '/Tasks/DeleteConfirmed/' + taskId, // Include the id as a route parameter
            type: 'POST',
            data: {
                __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
            },
            success: function(result) {
                console.log('Task deleted, reloading page'); // Add this line
                location.reload(); // Refresh the page
            },
            error: function(jqXHR, textStatus, errorThrown) {
                console.error(textStatus, errorThrown); // Log any errors to the console
            }
        });
    });
});
</script>

@* <script>
    $('edit-save').submit(function(e) {
        e.preventDefault(); // Prevent the form from being submitted normally

        var taskId = $('input[name="Id"]').val();

        if (taskId) { // If the task ID field has a value, update the task
            $.ajax({
                url: '/Tasks/Edit/' + taskId,
                type: 'POST',
                data: $(this).serialize(), // Serialize the form data
                success: function(result) {
                    location.reload(); // Reload the page to reflect the changes
                }
            });
        } else { // If the task ID field does not have a value, create a new task
            $.ajax({
                url: '/Tasks/Create',
                type: 'POST',
                data: $(this).serialize(), // Serialize the form data
                success: function(result) {
                    location.reload(); // Reload the page to reflect the changes
                }
            });
        }
    });
</script> *@

@* <script>
    $('.edit-icon').click(function() {
        var taskId = $(this).data('id');

        $.ajax({
            url: '/Tasks/Edit/' + taskId,
            type: 'GET',
            success: function(result) {
                // Populate the form fields with the task data
                $('input[name="Description"]').val(result.description);
                $('select[name="Category"]').val(result.category);
                $('input[name="DueDate"]').val(result.dueDate);
                $('input[name="Id"]').val(result.id);
            }
        });
    });
</script> *@




